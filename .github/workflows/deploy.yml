name: Deploy self-hosted runner

on:
  workflow_dispatch:

jobs:
  get-runners:
    environment: aws_dev
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
        - label: staging
          type: spot
        #- label: prod
        #  type: ondemand
    steps:
      - name: Get Runner
        uses: alphagov/github-actions-runner-orchestration/client@main
        id: garoclient
        with:
          ACTION: 'start'
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          RUNNER_TYPE: ${{ matrix.type }}
          RUNNER_LABEL: ${{ matrix.label }}
          REPO: '${{ github.repository }}'
          GITHUB_COMMIT: '${{ github.sha }}'
          RUNNER_SUBNET: '${{ secrets.RUNNER_SUBNET }}'
          RUNNER_SG: '${{ secrets.RUNNER_SG }}'
          RUNNER_ACID: '${{ secrets.RUNNER_ACID }}'
          RUNNER_EXID: '${{ secrets.RUNNER_EXID }}'
          GARO_URL: 'https://prod.co-cdio-garo.digital'
          RUNNER_TIMEOUT: '3600'

  use-staging-runner:
    runs-on: [self-hosted, linux, spot, staging]
    needs: get-runners
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: main
    - run: |
        source ~/.bash_profile

        cd main/
        make test-full
        make build-full

        cd garo_terraform/
        tfenv install
        tfenv use
        terraform init
        terraform validate
        terraform workspace list
        terraform workspace select staging
        terraform plan


#  use-prod-runner:
#    runs-on: [self-hosted, linux, ondemand, ondemand]
#    needs: get-runners
#    steps:
#    - run: |
#        echo "Hello world from test3 (ondemand)!"
#        echo ""
#        aws sts get-caller-identity
#        echo ""
