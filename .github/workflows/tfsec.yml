name: Validate and Test Terraform
# this action runs terraform init, validate and tests
# for common security vulnerabilities

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**.tf'
  pull_request:
    paths:
      - '**.tf'

jobs:
  tfsec:
    name: Validate and Test Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@main
      
      - name: Empty zip
        run: touch .build/lambda.zip
        
      - name: Validate Terraform
        run: |
          # install tfenv
          if ! command -v "tfenv" > /dev/null; then
            git clone https://github.com/tfutils/tfenv.git ~/.tfenv
            sudo rm /usr/local/bin/tfenv || echo "No tfenv installed"
            sudo rm /usr/local/bin/terraform || echo "No terraform installed"
            sudo ln -s ~/.tfenv/bin/* /usr/local/bin > /dev/null
          fi

          tfenv install "$(cat .terraform-version)" > /dev/null
          tfenv use "$(cat .terraform-version)" > /dev/null
          mkdir -p ~/.terraform.d/plugin-cache
          echo "plugin_cache_dir = \"$HOME/.terraform.d/plugin-cache\"" > \
            ~/.terraformrc

          for folder in $(find * -type f -name '*.tf' \
            | grep -Eo "(.*\/)" | sort | uniq)
          do
            echo "================="
            echo "Checking $folder deployment."
            echo "-----------------"
            workdir=$(pwd)
            cd "$folder" || exit 1
            rm -rf .terraform || echo "No .terraform"
            rm -rf .terraform.lock.hcl || echo "No .terraform.lock.hcl"
            terraform init -backend=false
            terraform validate
            cd "$workdir" || exit 1
            echo "-----------------"
            echo "$folder is valid!"
          done

      # test Terraform for security vulnerabilities
      - name: tfsec
        uses: tfsec/tfsec-sarif-action@2ec44316ed27c50d48c931c3c628adc4c8bb1d2b
        with:
          sarif_file: tfsec.sarif
          # secret generated per workflow run
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # GitHub security outputs
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          # created above in last step
          sarif_file: tfsec.sarif
