name: Create AMI

on:
  workflow_dispatch:

jobs:
  get-spot-runner:
    environment: aws_dev
    runs-on: ubuntu-latest
    name: Get a spot runner using prod API
    outputs:
      name: ${{ steps.garoclient-spot.outputs.name }}
      runnerstate: ${{ steps.garoclient-spot.outputs.runnerstate }}
      uniqueid: ${{ steps.garoclient-spot.outputs.uniqueid }}
    steps:
      - name: Get runner
        uses: alphagov/github-actions-runner-orchestration/client@main
        id: garoclient-spot
        with:
          ACTION: 'start'
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          RUNNER_TYPE: 'spot'
          REPO: '${{ github.repository }}'
          GITHUB_COMMIT: '${{ github.sha }}'
          RUNNER_SUBNET: '${{ secrets.RUNNER_SUBNET }}'
          RUNNER_SG: '${{ secrets.RUNNER_SG }}'
          RUNNER_ACID: '${{ secrets.RUNNER_ACID }}'
          RUNNER_EXID: '${{ secrets.RUNNER_EXID }}'
          GARO_URL: 'https://prod.co-cdio-garo.digital'
          RUNNER_TIMEOUT: '3600'
          RUNNER_LABEL: 'prod'

      - name: Output runner details
        run: |
          echo "Name: ${{ steps.garoclient-spot.outputs.name }}"
          echo "State: ${{ steps.garoclient-spot.outputs.runnerstate }}"
          echo "UniqueID: ${{ steps.garoclient-spot.outputs.uniqueid }}"

  create-ami:
    environment: aws_dev
    name: Deploy an instance with the build only
    needs: get-spot-runner
    runs-on: [self-hosted, prod, "${{ needs.get-spot-runner.outputs.uniqueid }}"]
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: main
        abcdefgh: "${{ needs.get-spot-runner.outputs.uniqueid }}"
      env:
        SUBNETID: '${{ secrets.RUNNER_SUBNET }}'
        SECURITYG: '${{ secrets.RUNNER_SG }}'
        RUNNERUID: "${{ needs.get-spot-runner.outputs.uniqueid }}"
    - run: |
        echo "Runner Unique ID: $RUNNERUID"
        echo "Runner Unique ID: ${{ needs.get-spot-runner.outputs.uniqueid }}"
        echo "Runner Unique ID: ${{ github.event.inputs.abcdefgh }}"
        
        source ~/.bash_profile && source ~/.bashrc
        cd main/
        export SUBNETID=$SUBNETID \
          && export SECURITYG=$SECURITYG \
          && scripts/create_ami.sh
